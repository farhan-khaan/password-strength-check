import streamlit as st # Streamlit
import re # Regular Expression

# Title
st.set_page_config("Password Strength Checker", page_icon="üîê",layout="centered")

# CSS Styling
st.markdown("""
            <style>
            body {
                color: #fff;
                background-color: #333;
            }
            .main {text-align: center;}
            .st-bw {background-color: #333;}
            .sttext_input {color: #333; width: 50%; !important; margin: 0 auto;}
            .stButton>button {background-color: #333; color: #fff; border: 1px solid #fff; font-weight: bold; font-size: 1.2em;}
            .stButton>button:hover {background-color: #fff; color: #333;}
            .stButton>button:active {background-color: #333; color: #fff;}
            .stButton>button:focus {background-color: #333; color: #fff;}
            .stButton>button:focus:hover {background-color: #fff; color: #333;}
            .stButton>button:active:focus {background-color: #333; color: #fff;}
            </style>
            
## Welcome to the Password Strength Checker
We will give you helpful tips to create a *Strong Password*
""", unsafe_allow_html=True)

# page tile and description
st.title("Password Strength Checker")
st.write("Enter your password to check its securety level and get suggestions to improve it")

# password input
def checkpassword (password):
      
    score = 0
    feedback = []

    if len(password) >= 8:
        score += 1
    else:
        feedback.append("Password should be at least 8 characters long")
    if re.search(r'[A-Z]', password) and re.search(r'[a-z]', password):
        score += 1
    else:
        feedback.append("Password should contain both uppercase and lowercase characters/letters")
    if re.search(r'\d', password):
        score += 1
    else:
        feedback.append("Password should contain at least 1 digit/number")
    if re.search(r'[!@#$%^&()*]', password):
        score += 1
    else:
        feedback.append("Password should contain at least 1 special character i.e.[!@#$%^&()*]")

# display password 
    if score == 4:
        feedback.append("Your password is strong")
    elif score == 3:
        feedback.append("Your password is of medium strength")
    else:
        feedback.append("Your password is weak")
# return feedback
    if feedback:
        with st.beta_expander("Feedback"):
            for tip in feedback:
                st.write(tip)
        st.markdown("## Improvement Suggestions")
        password = st.text_input("Enter your password", type="password", help="Enter your password to check its strength")
        if st.button("Check Password"):
            checkpassword(password)
    else:
        st.info("Please enter your password to get started")
# password input
password = st.text_input("Enter your password", type="password", help="Enter your password to check its strength")

# check password button
if st.button("Check Password"):
    checkpassword(password)
else:
    st.warning("Please enter your password First")

st.markdown("&copy; Copyright 2025 Farhan Khan")
